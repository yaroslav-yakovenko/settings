include nginx_basic.conf;

access_log  /usr/local/nginx/logs/access.log  custom;
access_log  /usr/local/nginx/logs/count_web.log  custom;

# In this subdomain we will not serve anything from nginx host, 
# only proxy will be used, so this is required
root /non_existed_dir;

location = / {
	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	try_files $uri @rewrite;
}
location / {
	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	try_files $uri @rewrite;
}
location @rewrite {
	set $cached 0;

	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	if ($cookie_irlogged = "") {
		set $cached "html";
	}
	if ($cookie_fbuid != "") {
		set $cached 0;
	}
	if ($request_method ~ ^POST$ ) {
		set $cached 0;
	}
#	set $cache_download "";
	# But we cache download even POST
	if ($uri ~ "/lv/software/downloadf/kl")	{
#		set $cache_download "F";
		set $cached "download";
	}
#	if ($uri ~ "/lv/software/download/kl") {
#		set $cache_download $cache_download"2";
#	}
#	if ($host ~* "phpnuke.org|benjaminstrahs.com|downius.com") {
#		set $cache_download"2";
#	}
#	if ($cache_download ^~ "(F|22)") {
#		set $cached "download";
#	}
	# Home page any method will be cached
	if ($arg_rvs ~* "^(hompag|google)") {
		set $cached "home_lua";
	}
	if ($uri ~* "captcha") {
		set $cached 0;
	}
	# no engine caching
	if ($arg_nocache = "y") {
		set $cached 0;
	}
	if ($arg_no_cache = "1") {
		set $cached 0;
	}
	# no caching for the current page on nginx side
	if ($arg_nginx_nocache = "y") {
		set $cached 0;
	}
	# no caching for debug
	if ($arg_debug ~* "^(555|556|57)$") {
		set $cached 0;
	}
	# rebuild engine cache
	if ($arg_rebuild = "y") {
		set $cached 0;
	}
	if ($cached = 0) {
		error_page 404 = @proxy_without_cache;
	}
	if ($cached = "html") {
		error_page 404 = @proxy_with_cache;
	}
	if ($cached = "download") {
		error_page 404 = @proxy_with_cache_download;
	}
	if ($cached = "home") {
		error_page 404 = @proxy_with_cache_home;
	}
	if ($cached = "home_lua") {
		error_page 404 = @home_lua;
	}
}
# Support for timestamps in urls (required for correct design upgrade based on files mtime)
location ~* "^(.+)\.([0-9]{10})\.(jpg|jpeg|gif|gz|zip|flv|rar|wmv|avi|css|swf|png|htc|ico|mpeg|mpg|txt|mp3|mov|js)$" {
	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	set $new "$1.$3";
	rewrite ^ $new;
}
location ~* "^/(images|javascript)/" {
	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	set $cached 1;
	if ($uri ~* "captcha") {
		set $cached 0;
	}
    if ($arg_nocache = "y") {
        set $cached 0;
    }
    if ($arg_no_cache = "1") {
        set $cached 0;
    }
	if ($arg_debug ~* "^(555|556|57)$") {
        set $cached 0;
    }
    if ($cached = 0) {
        error_page 404 = @proxy_without_cache_media;
    }
	if ($cached = 1) {
		error_page 404 = @proxy_with_cache_media;
	}
}
location ~* "^/(templates|js|uploads)/" {
	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	set $cached 1;
	if ($uri ~* "captcha")	{
		set $cached 0;
	}
    if ($arg_nocache = "y") {
        set $cached 0;
    }
    if ($arg_no_cache = "1") {
        set $cached 0;
    }
	if ($arg_debug ~* "^(555|556|57)$") {
        set $cached 0;
    }
    if ($cached = 0) {
        error_page 404 = @proxy_without_cache;
    }
	if ($cached = 1) {
		error_page 404 = @proxy_with_cache;
	}
}
location ~* ^(.+)\.(jpg|jpeg|gif|gz|zip|flv|rar|wmv|avi|css|swf|png|htc|ico|mpeg|mpg|txt|mp3|mov|js)$ {
	if ($http_x_nginx_skip_logging != "") {
		access_log off;
	}
	set $cached 1;
	if ($uri ~* "captcha") {
		set $cached 0;
	}
    if ($arg_nocache = "y") {
        set $cached 0;
    }
    if ($arg_no_cache = "1") {
        set $cached 0;
    }
	if ($arg_debug ~* "^(555|556|57)$") {
        set $cached 0;
    }
    if ($cached = 0) {
        error_page 404 = @proxy_without_cache;
    }
	if ($cached = 1) {
		expires 30d;
		error_page 404 = @proxy_with_cache;
	}
}
